<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zknu.shop.mapper.EcsBackActionMapper" >
  <resultMap id="BaseResultMap" type="com.zknu.shop.pojo.EcsBackAction" >
    <id column="action_id" property="actionId" jdbcType="INTEGER" />
    <result column="back_id" property="backId" jdbcType="INTEGER" />
    <result column="action_user" property="actionUser" jdbcType="VARCHAR" />
    <result column="status_back" property="statusBack" jdbcType="BIT" />
    <result column="status_refund" property="statusRefund" jdbcType="BIT" />
    <result column="action_note" property="actionNote" jdbcType="VARCHAR" />
    <result column="log_time" property="logTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    action_id, back_id, action_user, status_back, status_refund, action_note, log_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zknu.shop.pojo.EcsBackActionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ecs_back_action
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ecs_back_action
    where action_id = #{actionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ecs_back_action
    where action_id = #{actionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zknu.shop.pojo.EcsBackActionExample" >
    delete from ecs_back_action
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zknu.shop.pojo.EcsBackAction" >
    insert into ecs_back_action (action_id, back_id, action_user, 
      status_back, status_refund, action_note, 
      log_time)
    values (#{actionId,jdbcType=INTEGER}, #{backId,jdbcType=INTEGER}, #{actionUser,jdbcType=VARCHAR}, 
      #{statusBack,jdbcType=BIT}, #{statusRefund,jdbcType=BIT}, #{actionNote,jdbcType=VARCHAR}, 
      #{logTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.zknu.shop.pojo.EcsBackAction" >
    insert into ecs_back_action
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="actionId != null" >
        action_id,
      </if>
      <if test="backId != null" >
        back_id,
      </if>
      <if test="actionUser != null" >
        action_user,
      </if>
      <if test="statusBack != null" >
        status_back,
      </if>
      <if test="statusRefund != null" >
        status_refund,
      </if>
      <if test="actionNote != null" >
        action_note,
      </if>
      <if test="logTime != null" >
        log_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="actionId != null" >
        #{actionId,jdbcType=INTEGER},
      </if>
      <if test="backId != null" >
        #{backId,jdbcType=INTEGER},
      </if>
      <if test="actionUser != null" >
        #{actionUser,jdbcType=VARCHAR},
      </if>
      <if test="statusBack != null" >
        #{statusBack,jdbcType=BIT},
      </if>
      <if test="statusRefund != null" >
        #{statusRefund,jdbcType=BIT},
      </if>
      <if test="actionNote != null" >
        #{actionNote,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zknu.shop.pojo.EcsBackActionExample" resultType="java.lang.Integer" >
    select count(*) from ecs_back_action
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ecs_back_action
    <set >
      <if test="record.actionId != null" >
        action_id = #{record.actionId,jdbcType=INTEGER},
      </if>
      <if test="record.backId != null" >
        back_id = #{record.backId,jdbcType=INTEGER},
      </if>
      <if test="record.actionUser != null" >
        action_user = #{record.actionUser,jdbcType=VARCHAR},
      </if>
      <if test="record.statusBack != null" >
        status_back = #{record.statusBack,jdbcType=BIT},
      </if>
      <if test="record.statusRefund != null" >
        status_refund = #{record.statusRefund,jdbcType=BIT},
      </if>
      <if test="record.actionNote != null" >
        action_note = #{record.actionNote,jdbcType=VARCHAR},
      </if>
      <if test="record.logTime != null" >
        log_time = #{record.logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ecs_back_action
    set action_id = #{record.actionId,jdbcType=INTEGER},
      back_id = #{record.backId,jdbcType=INTEGER},
      action_user = #{record.actionUser,jdbcType=VARCHAR},
      status_back = #{record.statusBack,jdbcType=BIT},
      status_refund = #{record.statusRefund,jdbcType=BIT},
      action_note = #{record.actionNote,jdbcType=VARCHAR},
      log_time = #{record.logTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zknu.shop.pojo.EcsBackAction" >
    update ecs_back_action
    <set >
      <if test="backId != null" >
        back_id = #{backId,jdbcType=INTEGER},
      </if>
      <if test="actionUser != null" >
        action_user = #{actionUser,jdbcType=VARCHAR},
      </if>
      <if test="statusBack != null" >
        status_back = #{statusBack,jdbcType=BIT},
      </if>
      <if test="statusRefund != null" >
        status_refund = #{statusRefund,jdbcType=BIT},
      </if>
      <if test="actionNote != null" >
        action_note = #{actionNote,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where action_id = #{actionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zknu.shop.pojo.EcsBackAction" >
    update ecs_back_action
    set back_id = #{backId,jdbcType=INTEGER},
      action_user = #{actionUser,jdbcType=VARCHAR},
      status_back = #{statusBack,jdbcType=BIT},
      status_refund = #{statusRefund,jdbcType=BIT},
      action_note = #{actionNote,jdbcType=VARCHAR},
      log_time = #{logTime,jdbcType=TIMESTAMP}
    where action_id = #{actionId,jdbcType=INTEGER}
  </update>
</mapper>